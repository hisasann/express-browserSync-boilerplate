var $, browserify, buffer, colors, createBundle, createBundles, gulp, javascriptFiles, source, watchify;

gulp = require('gulp');

$ = require('gulp-load-plugins')();

browserify = require('browserify');

watchify = require('watchify');

source = require('vinyl-source-stream');

buffer = require('vinyl-buffer');

colors = require('colors');

javascriptFiles = require('../config').browserify;

createBundle = function(options) {
  var bundler, rebundle;
  bundler = browserify({
    entries: options.input,
    extensions: options.extensions,
    cache: {},
    packageCache: {},
    fullPaths: false,
    debug: true
  });
  if (global.isWatching) {
    bundler = watchify(bundler);
  }
  bundler.on("log", $.util.log);
  rebundle = function() {
    var startTime;
    startTime = new Date().getTime();
    return bundler.bundle().on('error', function() {
      return console.log(arguments);
    }).pipe(source(options.output)).pipe(buffer()).pipe($["if"](global.isRelease, $.uglify({
      preserveComments: 'some'
    }))).pipe($.size(gulp)).pipe(gulp.dest(options.destination)).on('end', function() {
      var time;
      time = (new Date().getTime() - startTime) / 1000;
      return console.log(options.output.cyan + " was browserified: " + (time + 's').magenta);
    });
  };
  if (global.isWatching) {
    bundler.on('update', rebundle);
  }
  return rebundle();
};

createBundles = function(bundles) {
  return bundles.forEach(function(bundle) {
    return createBundle({
      input: bundle.input,
      output: bundle.output,
      extensions: bundle.extensions,
      destination: bundle.destination
    });
  });
};

gulp.task('browserify', function() {
  return createBundles(javascriptFiles);
});

// ---
// generated by coffee-script 1.9.2